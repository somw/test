<?php 
	for($g = 1; $g <= 100; $g++){
		for($m = 1; $m <= 100; $m++){
			for($x = 1; $x <= 100; $x++ ){ 
				if(($g + $m + $x) == 100 && ($g*5 + $m*3 + $x/3) == 100){
					echo '公鸡',$g,'，母鸡',$m,'，小鸡',$x,'<br />';
				}
			}
		}
	}//执行100 * 100 * 100次，但是效率很低。
	echo '<hr />';
	for($g = 1; $g <= 100; $g++){
		for($m = 1; $m <= 100; $m++){
			$x = 100 - $g - $m;
				if(($g + $m + $x) == 100 && ($g*5 + $m*3 + $x/3) == 100){
					echo '公鸡',$g,'，母鸡',$m,'，小鸡',$x,'<br />';
				}
		}
	}//这一次，优化掉一层for循环，运气最差，执行100 * 100次
		echo '<hr />';
	for($g = 1; $g <= 20; $g++){
		for($m = 1; $m <= 33; $m++){
			$x = 100 - $g - $m;
				if(($g + $m + $x) == 100 && ($g*5 + $m*3 + $x/3) == 100){
					echo '公鸡',$g,'，母鸡',$m,'，小鸡',$x,'<br />';
				}
		}
	}//此时，利用边界条件，优化了效率，最多运行20*33次。
?>